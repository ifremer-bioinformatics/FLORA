/*
 * -------------------------------------------------
 *  Nextflow config file for processes resources
 * -------------------------------------------------
 * Defines resources for all processes
 */


//define max for resources (expected to be overwritten)
params {
    max_cpus = 28
    max_memory = 500.GB
    max_time = 720.h
}

process {
    // Capture exit codes from upstream processes when piping
    shell = ['/usr/bin/env bash', '-euo', 'pipefail']

    // default for all tasks
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 5.GB * task.attempt, 'memory' ) }
    time = { check_max( 10.m * task.attempt, 'time' ) }
    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries = 3
    maxErrors = '-1'

    withLabel : rcorrector {
        cpus = { check_max( 10 * task.attempt, 'cpus' ) }
        memory = { check_max( 25.GB * task.attempt, 'memory' ) }
        time = { check_max( 24.h * task.attempt, 'time' ) }
    }
    withLabel : filter_uncorrect {
        memory = { check_max( 10.GB * task.attempt, 'memory' ) }
        time = { check_max( 1.h * task.attempt, 'time' ) }
    }
    withLabel : rrna_removal {
        cpus = { check_max( 20 * task.attempt, 'cpus' ) }
        memory = { check_max( 25.GB * task.attempt, 'memory' ) }
        time = { check_max( 2.h * task.attempt, 'time' ) }
    }
    withLabel : quality_trimming {
        cpus = { check_max( 18 * task.attempt, 'cpus' ) }
        memory = { check_max( 20.GB * task.attempt, 'memory' ) }
        time = { check_max( 30.m * task.attempt, 'time' ) }
    }
    withLabel : assembly {
        cpus = { check_max( 15 * task.attempt, 'cpus' ) }
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
        time = { check_max( 192.h * task.attempt, 'time' ) }
    }
}
